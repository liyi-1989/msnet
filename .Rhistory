Yim=apply(by0,3,mean)
Yim_test=apply(by1,3,mean)
Xim=bx0
Xim_test=bx1
Qi=quantile(Yim,ecdf(Xim)(Xim))
Qi_test=quantile(Yim,ecdf(Xim)(Xim_test))
plot(sort(Xim),rank(sort(Xim))/length(Xim),type="o",xlim=c(min(c(Yim,Xim)),max(c(Yim,Xim))),xlab="T",ylab="ECDF",
main=paste("Quantile Mapping (",CN,")"),col="blue")
lines(sort(Yim),rank(sort(Yim))/length(Yim),type="o",col="red")
legend("bottomright",c("GCM","Obs"),lty=1,pch=1,col=c("blue","red"))
rmse2=rep(0,96)
for(k in 1:96){
#T1=apply(Pr1_test[,,(1:Mon[mon,3])+(k-1)*Mon[mon,3]],c(1,2),sum, na.rm = TRUE) # Test truth (not available in real case) (for a given year)
T1=by1[,,k]
#M=apply(Pr1,c(1,2),sum, na.rm = TRUE)/25 # Local Historical Monthly (accumulation) mean
M=apply(by1,c(1,2),mean)
D2=Qi_test[k]*M/mean(Qi) #QM Downscale 1979 Jan, actually apply to training data (which need to try in testing data)
rmse2[k]=sqrt(mean((D2-T1)^2))
}
E_BCSD=sqrt(sum(rmse2^2))
E_BCSD
# plot(1:96,rmse2,col="black",type="o",ylim = c(0,max(c(rmse2,rmse3))),xlab="",ylab="RMSE",
#      main=paste("Downscaling on Testing Set in",Mon[mon,1]))
# lines(1:96,rmse3,col="green",type="o")
#df=NULL
df=rbind(df,c(CN,E_test,Elasso,E_BCSD))
View(df)
colnames(df)=c("City","DSSMR","LASSO","BCSD")
save(df,file="results/real_data_l10.RData")
load("results/real_data_l10.RData")
dfr=data.frame(x=c(df[,"City"],df[,"City"]),y=round(as.numeric(c(df[,"DSSMR"],df[,"BCSD"])),2),type=as.factor(c(rep(" DSSMR",6),rep("BCSD",6))),od=c(rep(2,6),rep(1,6)))
ggplot(dfr, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("City")+ylab("RMSE")+ggtitle("Downscaling Results")+theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
dfr=data.frame(x=c(df[,"City"],df[,"City"]),y=round(as.numeric(c(df[,"DSSMR"],df[,"BCSD"])),2),type=as.factor(c(rep(" DSSMR",6),rep("BCSD",6))),od=c(rep(2,6),rep(1,6)))
ggplot(dfr, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("City")+ylab("RMSE")+ggtitle("Downscaling Results")+theme(plot.title = element_text(hjust = 0.5))
dfr=data.frame(x=c(df[,"City"],df[,"City"]),y=round(as.numeric(c(df[,"DSSMR"],df[,"BCSD"])),2),type=as.factor(c(rep(" DSSMR",6),rep("BCSD",6))),od=c(rep(2,6),rep(1,6)))
ggplot(dfr, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("City")+ylab("RMSE")+ggtitle("Downscaling Results")+theme(plot.title = element_text(hjust = 0.5))
library(Matrix)
library(Rmpi)
library(snow)
library(glmnet)
#library(parallel)
source("senet.R")
source('D:/works/msenet/msnet_simu_fun.R')
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,betastar,Lx=Lx,Ly=Ly,stepsize = "fixed",par=F,df=NULL,type=NULL)
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=F,df=NULL,type=NULL)
df
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=F,df=NULL,type=NULL)
df[jobid,"dataseeds"]
df[1,"dataseeds"]
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=NULL,type=NULL)
jobid
df[1,"p"]
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=NULL,type=NULL)
class(df[1,"p"])
B=matrix(0,px,py)
px=py=df[jobid,"p"]
px=py=df[1,"p"]
B=matrix(0,px,py)
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=NULL,type=NULL)
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=NULL,type=NULL)
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=NULL,type=NULL)
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=df,type=NULL)
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=df,type=NULL)
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=df,type=NULL)
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=df,type=NULL)
norm(res1$input$B-res1$output$Bhat,"F")
norm(res1$input$B-res1$output$Bhatlasso,"F")
dim(res1$input$B)
dim(res1$output$Bhat)
dim(res1$output$Bhatlasso)
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=df,type=NULL)
norm(res1$input$B-res1$output$Bhat,"F")
norm(res1$input$B-res1$output$Bhatlasso,"F")
source('D:/works/msenet/msnet_simu_fun.R')
res1=simu(jobid=1,fixdata=T,paras,ctr,stepsize = "fixed",par=T,df=df,type=NULL)
norm(res1$input$B-res1$output$Bhat,"F")
norm(res1$input$B-res1$output$Bhatlasso,"F")
library(ggplot2)
load("./results/n2-1000pxpy1-40wlassolambdalasso/df.RData")
df0=as.data.frame(df[,c("n","p","ferr","ferrlasso","dataseeds")])
df0m=aggregate(cbind(df0$ferr,df0$ferrlasso),by=list(n=df0$n,p=df0$p),FUN=mean)
#aggregate(cbind(df0$ferr,df0$ferrlasso),by=list(n=df0$n,p=df0$p),FUN=sd)
colnames(df0m)=c("n","p","ferr","ferrlasso")
# plot sample_size vs error
df0=subset(df0m,p==10)
df00=data.frame(x=c(df0[,"n"],df0[,"n"]),y=c(df0[,"ferr"],df0[,"ferrlasso"]),type=c(rep("DSSMR",5),rep("Lasso",5)))
ggplot(df00, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("Sample Size")+ylab("RMSE")+ggtitle("Estimation Results")+theme(plot.title = element_text(hjust = 0.5))
df0=subset(df0m,n==2000)
df00=data.frame(x=c(df0[,"p"],df0[,"p"]),y=c(df0[,"ferr"],df0[,"ferrlasso"]),type=c(rep("DSSMR",4),rep("Lasso",4)))
ggplot(df00, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("Dimension")+ylab("RMSE")+ggtitle("Estimation Results")+theme(plot.title = element_text(hjust = 0.5))
dftw=NULL
for(i in 1:4){
dftw=cbind(dftw,as.matrix(df0m)[(i*5-4):(i*5),3:4])
}
View(dftw)
round(dftw,2)
library(ggplot2)
load("./results/n2-1000pxpy1-40wlassolambdalasso/df.RData")
df0=as.data.frame(df[,c("n","p","ferr","ferrlasso","dataseeds")])
df0m=aggregate(cbind(df0$ferr,df0$ferrlasso),by=list(n=df0$n,p=df0$p),FUN=mean)
#aggregate(cbind(df0$ferr,df0$ferrlasso),by=list(n=df0$n,p=df0$p),FUN=sd)
colnames(df0m)=c("n","p","ferr","ferrlasso")
# plot sample_size vs error
df0=subset(df0m,p==10)
df00=data.frame(x=c(df0[,"n"],df0[,"n"]),y=c(df0[,"ferr"],df0[,"ferrlasso"]),type=c(rep("DSSMR",5),rep("Lasso",5)))
ggplot(df00, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("Sample Size")+ylab("RMSE")+ggtitle("Estimation Results")+theme(plot.title = element_text(hjust = 0.5))
load("./results/n2-1000pxpy1-40wlassolambdalasso/df.RData")
df0=as.data.frame(df[,c("n","p","ferr","ferrlasso","dataseeds")])
df0m=aggregate(cbind(df0$ferr,df0$ferrlasso),by=list(n=df0$n,p=df0$p),FUN=mean)
#aggregate(cbind(df0$ferr,df0$ferrlasso),by=list(n=df0$n,p=df0$p),FUN=sd)
colnames(df0m)=c("n","p","ferr","ferrlasso")
# plot sample_size vs error
df0=subset(df0m,p==10)
df00=data.frame(x=c(df0[,"n"],df0[,"n"]),y=c(df0[,"ferr"],df0[,"ferrlasso"]),type=c(rep("DSSMR",5),rep("Lasso",5)))
ggplot(df00, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("Sample Size")+ylab("RMSE")+ggtitle("Estimation Results")+theme(plot.title = element_text(hjust = 0.5))
# plot dimension vs error
df0=subset(df0m,n==2000)
df00=data.frame(x=c(df0[,"p"],df0[,"p"]),y=c(df0[,"ferr"],df0[,"ferrlasso"]),type=c(rep("DSSMR",4),rep("Lasso",4)))
ggplot(df00, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("Dimension")+ylab("RMSE")+ggtitle("Estimation Results")+theme(plot.title = element_text(hjust = 0.5))
dftw=NULL
for(i in 1:4){
dftw=cbind(dftw,as.matrix(df0m)[(i*5-4):(i*5),3:4])
}
round(dftw,2)
write.table(round(dftw,2),file="figs/dftw.csv",row.names = F)
df0=as.data.frame(df[,c("n","p","ferr","ferrlasso","dataseeds")])
df0m=aggregate(cbind(df0$ferr,df0$ferrlasso),by=list(n=df0$n,p=df0$p),FUN=sd)
#aggregate(cbind(df0$ferr,df0$ferrlasso),by=list(n=df0$n,p=df0$p),FUN=sd)
colnames(df0m)=c("n","p","ferr","ferrlasso")
# plot sample_size vs error
df0=subset(df0m,p==10)
df00=data.frame(x=c(df0[,"n"],df0[,"n"]),y=c(df0[,"ferr"],df0[,"ferrlasso"]),type=c(rep("DSSMR",5),rep("Lasso",5)))
ggplot(df00, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("Sample Size")+ylab("RMSE")+ggtitle("Estimation Results")+theme(plot.title = element_text(hjust = 0.5))
# plot dimension vs error
df0=subset(df0m,n==2000)
df00=data.frame(x=c(df0[,"p"],df0[,"p"]),y=c(df0[,"ferr"],df0[,"ferrlasso"]),type=c(rep("DSSMR",4),rep("Lasso",4)))
ggplot(df00, aes(x=x, y=y, fill=type)) +
geom_bar(stat="identity", position=position_dodge())+
xlab("Dimension")+ylab("RMSE")+ggtitle("Estimation Results")+theme(plot.title = element_text(hjust = 0.5))
View(df0)
library(plyr)
library(ggplot2)
fsim="maxiter5000tol1e-5nrep10py1040"
load(paste0("./results_time/",fsim,"/results_df.RData"))
T1=rep(0,nrow(df))
for(i in 1:nrow(df)){
n=df[i,"n"]; px=df[i,"px"]; py=df[i,"py"]; dataseed=1
fname=paste0("./results_time/",fsim,"/n",n,"px",px,"py",py,"seed",dataseed,"job",i)
load(paste0(fname,".RData"))
T1[i]=slist$time
}
#df=cbind(df,1:nrow(df))
df=cbind(df,T1)
colnames(df)[9]="time"
df=as.data.frame(df)
#dfv1=aggregate(time ~ py+px+n, as.matrix(df[,5:9]), mean)
df[,"time"]=df[,"time"]/60
dfa=ddply(df,.(n,px,py),summarise,V1=mean(time),V2=sd(time))
#======= py=10
dfplot=subset(dfa,py==10,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab("px") +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
#======= py=20
dfplot=subset(dfa,py==20,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab("px") +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
dfplot=subset(dfa,py==30,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab("px") +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
#======= py=40
dfplot=subset(dfa,py==40,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab("px") +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
dfplot=subset(dfa,py==10,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab("p[x]") +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(bquote("p[x]")) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(bquote('p[x]')) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression('p[x]')) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression('p_x')) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
labs(x=expression("p[x]"))+
#xlab(expression('p_x')) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
labs(x=expression("~p[x]"))+
#xlab(expression('p_x')) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
#======= py=10
dfplot=subset(dfa,py==10,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
#======= py=20
dfplot=subset(dfa,py==20,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
#======= py=30
dfplot=subset(dfa,py==30,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
#======= py=40
dfplot=subset(dfa,py==40,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
fsim="maxiter1000tol1e-3nrep10py1040"
load(paste0("./results_time/",fsim,"/results_df.RData"))
T1=rep(0,nrow(df))
for(i in 1:nrow(df)){
n=df[i,"n"]; px=df[i,"px"]; py=df[i,"py"]; dataseed=1
fname=paste0("./results_time/",fsim,"/n",n,"px",px,"py",py,"seed",dataseed,"job",i)
load(paste0(fname,".RData"))
T1[i]=slist$time
}
#df=cbind(df,1:nrow(df))
df=cbind(df,T1)
colnames(df)[9]="time"
df=as.data.frame(df)
#dfv1=aggregate(time ~ py+px+n, as.matrix(df[,5:9]), mean)
df[,"time"]=df[,"time"]/60
dfa=ddply(df,.(n,px,py),summarise,V1=mean(time),V2=sd(time))
#======= py=10
dfplot=subset(dfa,py==10,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
#======= py=20
dfplot=subset(dfa,py==20,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
#======= py=30
dfplot=subset(dfa,py==30,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
#======= py=40
dfplot=subset(dfa,py==40,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
dfplot=subset(dfa,py==10,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggsave(paste0("./results_time/",fsim,"/py10.pdf"))
#======= py=20
dfplot=subset(dfa,py==20,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggsave(paste0("./results_time/",fsim,"/py20.pdf"))
#======= py=30
dfplot=subset(dfa,py==30,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggsave(paste0("./results_time/",fsim,"/py30.pdf"))
#======= py=40
dfplot=subset(dfa,py==40,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggsave(paste0("./results_time/",fsim,"/py40.pdf"))
fsim="maxiter5000tol1e-5nrep10py1040"
load(paste0("./results_time/",fsim,"/results_df.RData"))
T1=rep(0,nrow(df))
for(i in 1:nrow(df)){
n=df[i,"n"]; px=df[i,"px"]; py=df[i,"py"]; dataseed=1
fname=paste0("./results_time/",fsim,"/n",n,"px",px,"py",py,"seed",dataseed,"job",i)
load(paste0(fname,".RData"))
T1[i]=slist$time
}
#df=cbind(df,1:nrow(df))
df=cbind(df,T1)
colnames(df)[9]="time"
df=as.data.frame(df)
#dfv1=aggregate(time ~ py+px+n, as.matrix(df[,5:9]), mean)
df[,"time"]=df[,"time"]/60
dfa=ddply(df,.(n,px,py),summarise,V1=mean(time),V2=sd(time))
#======= py=10
dfplot=subset(dfa,py==10,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggsave(paste0("./results_time/",fsim,"/py10.pdf"))
#======= py=20
dfplot=subset(dfa,py==20,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggsave(paste0("./results_time/",fsim,"/py20.pdf"))
#======= py=30
dfplot=subset(dfa,py==30,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggsave(paste0("./results_time/",fsim,"/py30.pdf"))
#======= py=40
dfplot=subset(dfa,py==40,select = c("n","px","V1","V2"))
dfplot[,"n"]=as.factor(dfplot[,"n"])
ggplot(dfplot, aes(x=px, y=V1, colour=n)) +
geom_errorbar(aes(ymin=V1-V2, ymax=V1+V2),width=1) +
geom_line() +
geom_point()+
xlab(expression(paste("p" ["x"]))) +
ylab("Time (min)") +
ggtitle("Time Comparison")+
theme(plot.title = element_text(hjust = 0.5))
ggsave(paste0("./results_time/",fsim,"/py40.pdf"))
