{
    "collab_server" : "",
    "contents" : "#########################################################################\n#\n# Examples for the R code implementing the structured elastic net\n#\n# Example 1: Two bumps\n#\n# Example 2: phonemes\n#\n# (C) Martin Slawski, Feb. 2012 \n#\n#########################################################################\n#setwd(\"D:/works/senet\")\nsource(\"senet.R\")\n### 1st example: two bumps\nbetastar <- sapply(1:100, function(t) (20 < t && t < 40)*((-1)*(30 - t)^2+100)/200 +\n                                       (60 < t && t < 80)*((70 - t)^2-100)/200)\n\n### \nset.seed(1809)\ndata <- simblock1d(n = 200, p=100, noise.signal = 0.25,\n                   noise.response = 10, betastar)\nX <- data$X\ny <- data$y\nLambda <- crossprod( fd(100) )\n### fixed step-size\nL <- Ll2(X, Lambda, lambda2 = 10)\nt0=proc.time()\nout <- senet_fista(X, y, Lambda, lossfun = l2loss, gradfun = l2grad, lambda1 = 10^4, lambda2 = 10,\n                        stepsize = \"fixed\",\n                        control = list(L = L,\n                                       use.gram = TRUE,\n                                       maxiter = 10000, \n                                       tol = 1e-8,\n                                       init = NULL,\n                                       sigma = 0.9))\nproc.time()-t0\nt0=proc.time()\n### back-tracking [recommended] \nout2 <- senet_fista(X, y, Lambda, lossfun = l2loss, gradfun = l2grad, lambda1 = 10^4, lambda2 = 10,\n                        stepsize = \"backtracking\",\n                        control = list(L = NULL,\n                                       use.gram = TRUE,\n                                       maxiter = 10000, \n                                       tol = 1e-8,\n                                       init = NULL,\n                                       sigma = 0.9))\nproc.time()-t0\n### 2nd example: phonemes\nlibrary(ElemStatLearn)\ndata(phoneme)\npart <- phoneme[phoneme$g %in% c(\"ao\", \"aa\"),]\nX <- as.matrix(part[,1:256])\ny  <- ifelse(part[,257] == \"ao\", 0, 1)\nn <- length(y)\np <- ncol(X)\nset.seed(1439)\ntrainind <- sample(1:n, floor(n*2/3))\nXtrain <- X[trainind,]\nXtest <-  X[-trainind,]\nYtrain <- y[trainind]\nYtest <- y[-trainind]\n###\nLambda <- crossprod( fd(256) )\n###\nout2 <- senet_fista(Xtrain, Ytrain, Lambda, lossfun = logisticloss, gradfun = logisticgrad, lambda1 = 300, lambda2 = 25000,\n                        stepsize = \"backtracking\",\n                        control = list(L = NULL,\n                                       use.gram = TRUE,\n                                       maxiter = 10000, \n                                       tol = 1e-8,\n                                       init = NULL,\n                                       sigma = 0.9))\nYhat <-  (sign(Xtest %*% out2$beta)  + 1)/2\nmean( abs(Yhat - Ytest) )\n### add intercept (not penalized)\nLambdaprime <- rbind(0, cbind(0, Lambda))\nmyweights <- c(0, rep(1, p))\nXtrainprime <- cbind(1, Xtrain)\nout2 <- senet_fista(Xtrainprime, Ytrain, Lambdaprime, lossfun = logisticloss, gradfun = logisticgrad, lambda1 = 300, lambda2 = 25000,\n                        stepsize = \"backtracking\",\n                        control = list(weights = myweights,\n                                       L = NULL,\n                                       use.gram = TRUE,\n                                       maxiter = 10000, \n                                       tol = 1e-8,\n                                       init = NULL,\n                                       sigma = 0.9))\nYhat <-  (sign(cbind(1, Xtest) %*% out2$beta)  + 1)/2\nmean( abs(Yhat - Ytest) )\n#########################################################################\n#########################################################################\n \n \n \n \n",
    "created" : 1482848944997.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "937362892",
    "id" : "3D4B3EA1",
    "lastKnownWriteTime" : 1482849104,
    "last_content_update" : 1482849104738,
    "path" : "D:/works/msenet/examples_senet.R",
    "project_path" : "examples_senet.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}