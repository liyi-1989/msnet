{
    "collab_server" : "",
    "contents" : "library(Matrix)\nsource(\"senet.R\")\n\nparas=list(\n  px=20,\n  py=20,\n  n=500,\n  lambda1=1,\n  lambda2=100,\n  noise.signal = 0.25,\n  noise.response = 10\n)\npx=paras$px\nbetastar=sapply(1:px,twobump,px)\n#betastar=sin(2*pi*(1:px)/px)\n\nctr=list(L = 1,\n         use.gram = TRUE,\n         maxiter = 10000, \n         tol = 1e-8,\n         init = NULL,\n         sigma = 0.9)\n\nGL=crossprod( fd(paras$px*paras$py) ) \nP=matrix(0,paras$px*paras$py,paras$px*paras$py)\nfor(i in 1:paras$px){ for(j in 1:paras$py){ P[(i-1)*paras$py+j,(j-1)*paras$px+i]=1 } } # Permutation matrix\nLambda = GL\nLambda2 = GL+ t(P)%*%GL%*%P\n# L = Ll2(Xt, Lambda, lambda2 = paras$lambda2) ### fixed step-size\n# L2 = Ll2(Xt, Lambda2, lambda2 = paras$lambda2) ### fixed step-size\n\nsimu=function(paras,ctr,betastar,Lambda,stepsize = \"fixed\"){\n  cat(\"1. Set Parameters ...\\n\")\n  px=paras$px; py=paras$py; n=paras$n; B=matrix(0,px,py); Y=matrix(0,n,py); X=matrix(0,n,px); X=list(py); \n  lambda1=paras$lambda1; lambda2=paras$lambda2; noise.signal = paras$noise.signal; noise.response = paras$noise.response\n   \n  cat(\"2. Generate Data ...\\n\")\n  for(i in 1:py){\n    B[,i]=betastar[(1:px-i)%%px+1]\n    data=simblock1d(n = n, p=px, noise.signal = noise.signal, noise.response = noise.response, B[,i])\n    Y[,i]=data$y; X[[i]]=data$Xt\n  }\n  # Block to long\n  data=list(Xt=as.matrix(bdiag(X)), y=c(Y), beta = c(B)) #Xt=bdiag(lapply(1:py,function(dumy,a){a},X)) # same X # npy*pxpy\n  ifelse(stepsize==\"fixed\",ctr$L=Ll2(data$Xt, Lambda, lambda2=lambda2),ctr$L=NULL)\n  cat(\"3. Fit the model ...\\n\")\n  out = senet_fista(data$Xt, data$y, Lambda, lossfun=l2loss, gradfun=l2grad, lambda1=lambda1, lambda2=lambda2, stepsize=stepsize, control = ctr)\n  Bhat=matrix(out$beta,byrow = FALSE,nrow = px, ncol = py)\n  \n  return(list(fit=out,B=B,Bhat=Bhat,px=px,py=py,n=n,Lambda=Lambda))\n}\n\n\nres1=simu(paras,ctr,betastar,Lambda)\nres2=simu(paras,ctr,betastar,Lambda2)\n\nimage(res1$B)\n\nnorm(res1$B-res1$Bhat,\"F\")\nimage(res1$Bhat)\n\nnorm(res2$B-res2$Bhat,\"F\")\nimage(res2$Bhat)\n\n",
    "created" : 1482956204851.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3030953608",
    "id" : "FF85AF12",
    "lastKnownWriteTime" : 1483021474,
    "last_content_update" : 1483021474647,
    "path" : "D:/works/msenet/msnet_simu.R",
    "project_path" : "msnet_simu.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}